  # Sample when vcpkg is a submodule of your repository (highly recommended!)

name: Run tests test
on: [push]

jobs: 
  build:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { Name: Windows VS2019, os: windows-2019, cc: cl.exe,    cxx: cl.exe }
        - { Name: Linux GCC,      os: ubuntu-20.04, cc: gcc-10,    cxx: g++-10 }
        - { Name: Linux Clang,    os: ubuntu-20.04, cc: clang-12,  cxx: clang++-12 }
        - { Name: MacOS Clang,    os: macos-10.15,  cc: clang,     cxx: clang++ }
        build_type: [Release, Debug]

    env:
      buildDir: '${{ github.workspace }}/build'
      CC: ${{ matrix.platform.cc }}
      CXX: ${{ matrix.platform.cxx }}
      CONAN_SYSREQUIRES_MODE: enabled
      CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
      CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: cache-conan-modules
        with:
          path: |
                ${{ env.CONAN_USER_HOME }}
                ~/.cache/pip
          key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('cmake/Conan.cmake') }}
      - name: log CMake version
        shell: bash
        run: cmake --version
      - name: create build enviornment
        shell: bash
        run: cmake -E make_directory ${{github.workspace}}/build
      - name: Install conan
        shell: bash
        run: |
             python3 -m pip install --upgrade pip setuptools
             python3 -m pip install conan
             source ~/.profile
      - name: configure cmake
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: |
             source ~/.profile
             cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
      - name: build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{ matrix.build_type }}
      - name: test
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: ctest -C ${{ matrix.build_type }}
          
