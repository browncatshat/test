  # Sample when vcpkg is a submodule of your repository (highly recommended!)

name: Run tests test
on: [push]

jobs: 
  build:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { Name: Windows VS2019, os: windows-2019, cc: cl.exe,    cxx: cl.exe }
        - { Name: Linux GCC,      os: ubuntu-20.04, cc: gcc-10,    cxx: g++-10 }
        - { Name: Linux Clang,    os: ubuntu-20.04, cc: clang-12,  cxx: clang++-12 }
        - { Name: MacOS Clang,    os: macos-10.15,  cc: clang,     cxx: clang++ }
        build_type: [Release, Debug]

    env:
      CC: ${{ matrix.platform.cc }}
      CXX: ${{ matrix.platform.cxx }}

    steps:
      - name: Checkout vcpkg
        run: git clone https://github.com/microsoft/vcpkg
      # Cache/Restore the vcpkg's build artifacts using a vcpkg.json manifest.
      - name: Run vcpkg
        uses: lukka/run-vcpkg@v6
        with:
          # Just install vcpkg for now, do not install any ports in this step yet.
          setupOnly: true
          # Location of the vcpkg as submodule of the repository.
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
          # compute its hash and append this to the computed cache's key.
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          # Ensure the vcpkg artifacts are cached, they are generated in the 'CMAKE_BINARY_DIR/vcpkg_installed'.
          additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed
      - name: Run CMake
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/cmakesettings.json/CMakeLists.txt'
          useVcpkgToolchainFile: true
          # cmakeAppendedArgs: '-GNinja'
          buildDirectory: ${{ env.buildDir }}
          # Or build multiple configurations out of a CMakeSettings.json file created with Visual Studio.
          # cmakeListsOrSettingsJson: CMakeSettingsJson
          # cmakeSettingsJsonPath: '${{ github.workspace }}/cmakesettings.json/CMakeSettings.json'
          # configurationRegexFilter: '${{ matrix.configuration }}'
          
